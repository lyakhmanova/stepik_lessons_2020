Страница 1 - Каталог
http://selenium1py.pythonanywhere.com/ru/catalogue/ 
- Пользовательский сценарий 1.1 Добавление товара в корзину 
 
-- Тестовый сценарий 1.1.1 Добавление в корзину одного товара с главной страницы каталога

- Пользовательский сценарий 1.2 Поиск товара 
-- Тестовый сценарий 1.2.1 Поиск товара с помощью поисковой строки каталога


Страница 2 - Корзина 
http://selenium1py.pythonanywhere.com/ru/basket/

- Пользовательский сценарий 2.1 Корректировка корзины   
-- Тестовый сценарий 2.1.1 Добавление и удаление товаров в корзине

- Пользовательский сценарий 2.2 
-- Тестовый сценарий 2.2.1 Переход к чекауту




Тестовый сценарий 1.1.1 Добавление в корзину одного товара с главной страницы каталога
Предусловия:
1) Открыта страница http://selenium1py.pythonanywhere.com/ru/catalogue/
2) На странице каталога есть как минимум один товар со статусом “На складе”

Шаги:
Шаг 1: Выбрать товар со статусом “На складе”. 
Ожидаемый результат: кнопка “Добавить в корзину” активна для выбранного товара. 

Шаг 2: Нажать кнопку “добавить в корзину”. 
Ожидаемый результат: 
- Появляется сообщение “(название товара) был добавлен в вашу корзину.”
- Появляется сообщение “Стоимость корзины теперь составляет (цена выбранного товара)” содержащее кнопки “перейти в корзину” и “оформить”

Шаг 3: Нажать кнопку “перейти в корзину”. 
Ожидаемый результат: 
- открывается страница http://selenium1py.pythonanywhere.com/ru/basket/
- в списке товаров отображается товар, выбранный нами в шаге 2. 


Тестовый сценарий 1.2.1 Поиск товара с помощью поисковой строки каталога

Предусловия:
Открыта страница http://selenium1py.pythonanywhere.com/ru/catalogue/

Шаги:
Шаг 1:  Выбрать строку поиска 
Ожидаемый результат: поле ввода и кнопка “поиск “ доступны

Шаг 2: Ввести валидный запрос в форму поиска, пример: City
Ожидаемый результат: открылась страница с результатами поиска (http://selenium1py.pythonanywhere.com/ru/search/?q=City)

-- Тестовый сценарий 2.1.1 Добавление и удаление товаров в корзине
Предусловия: корзина содержит n единиц одного товара.

Шаги:
Шаг 1:  в поле с отображением количества единиц товара увеличить значение на 1, нажать “Обновить”
Ожидаемый результат: 
в поле отображается n+1 единиц товара
общая сумма заказа увеличилась на стоимость добавленного товара
появилось сообщение “Стоимость корзины теперь составляет (сумма)”

Шаг 2:  в поле с отображением количества единиц товара уменьшить значение на 1 единицу, нажать “Обновить”
Ожидаемый результат: 
в поле отображается n-1 единиц товара
общая сумма заказа уменьшилась на стоимость добавленного товара
появилось сообщение “Стоимость корзины теперь составляет (сумма)”

- Пользовательский сценарий 2.2 
-- Тестовый сценарий 2.2.1 Переход к чекауту
Предусловия: корзина содержит товар, доступный к заказу 
Шаги:
Шаг 1: нажать кнопку “Перейти к оформлению”
Ожидаемый результат: открылась страница http://selenium1py.pythonanywhere.com/ru/checkout/ 


#Комментарий к задаче: проверки написала простые до примитивности, мне пока сложно совместить привычные техники тест-дизайна с page-object. Например, не очень понятно, как строить тест-кейс по покупке товара, если он задействует несколько важных страниц. Если не трудно, подскажите пожалуйста в комментарии к решению, как лучше поступать с такими кейсами?
